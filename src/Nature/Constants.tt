<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension="generated.cs" #>

<#@ assembly name="System" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="Microsoft.CSharp" #>

<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Configuration" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.Xml.Serialization" #>
<#@ import namespace="System.Diagnostics" #>
<#
	var constants = Constants.Load(Host.ResolvePath(@"Constants.xml")).Items;
    		
 #>
namespace Nature
{
	using System;

	/// <summary>
    /// Constants
    /// </summary>
	public static partial class Constants
	{<# foreach(var c in constants ) { #> 
		/// <summary>
        /// <#= c.Quantity #> (<#= c.Value #><#= c.Units != "" ? " [" + c.Units + "]"  : "" #>)
        /// </summary>
		/// <remarks>
		/// wikipedia: <#= c.Description #>
        /// </remarks>
		public const <#= c.ClrType #> <#= c.Code #> = <#= c.Value #>;
		<# } #> 
	}	
}
	<#+ 

	[XmlRoot("Constants")]
	public class Constants
	{
		public class Item
		{
			[XmlAttribute()]
			public string Code { get; set; }
			[XmlAttribute()]
			public string Value { get; set; }
			[XmlAttribute()]
			public string Units { get; set; }
			[XmlAttribute()]
			public string ClrType { get; set; }
			[XmlAttribute()]
			public string Quantity { get; set; }
			[XmlAttribute()]
			public string Description { get; set; }
		}

		[XmlElement("Add")]
		public Item[] Items { get; set; }

		public static Constants Load(string path)
		{
			var dslFile = new FileInfo(path);
			if(dslFile.Exists == false)			
				throw new FileNotFoundException(dslFile.FullName);
			
			using(var stream = File.OpenRead(dslFile.FullName))			
            {
				var items = (Constants)(new XmlSerializer(typeof(Constants)).Deserialize(stream));		
				return items;
			}
		}

	}
			
	#>