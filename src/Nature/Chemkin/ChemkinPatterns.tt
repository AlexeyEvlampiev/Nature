<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".generated.cs" #><# 

    string realNumber = Minify(
        @"
            (?:               
                (?: 
                    (?:\d+\.?\d*) | (?:\.\d+) 
                )                            
                (?:[EDFedf][+-]?\d{1,3})?               
            )
        ");
    string signedRealNumber = Minify(string.Format("(?:[+-]?(?:{0}))", realNumber));    

    string speciesId = Minify(
            @"
                (?:
                    (?!\b(?:M|HV|LOW|TROE|SRI|REV)\b)
                    (?:                       
                        (?: [(] [^\s()]* [)]  | (?:\w[-,])+\w | \w )+
                        \+*
                    )
                )
            "
        );

    string elementId = Minify(@"[a-zA-Z]{1,2}");

        string arrheniusAbc = Minify(@"
            (?:(?<arrhenius1>@u) \s* (?<arrhenius2>@s) \s* (?<arrhenius3>@s))
        ".Replace("@u", realNumber)
        .Replace("@s", signedRealNumber));

    string patternEnergyUnitsBase = Minify(
        @"(?:
            (?:k(?:ilo)?)?
            (?:
                joul(?:es?)? | cal(?:ories?)? | ergs? | evolts?   
            )                  
        )");
    string patternAmountUnitsBase = Minify(
        @"
            (?:
                (?:   (?:k(?:ilo)?)?  mol(?:es?)?    ) | 
                molec(?:ules?)?
            )
        ");

    string prnUnitsItem = Minify(
        @"
                (?: (?=\S)
                (?<activationEnergy> (?<energy>@energy) \s* [%/] \s* (?<amount>@amount) \b) | 
                (?<energy> \b @energy \b ) | 
                (?<amount> \b @amount \b ) | 
                (?<activationEnergy> (?<temperature>kelv(?:ins?)?|celcius|fahrenheits?) )|
                (?<defect> \S+ ) 
                )
        ".Replace("@energy", patternEnergyUnitsBase)
            .Replace("@amount", patternAmountUnitsBase)
            );
 #>
namespace Nature.Chemkin
{
    static class ChemkinPatterns
    {
        public const string UnsignedRealNumber = @"<#= realNumber #>";
        public const string SignedRealNumber = @"<#= signedRealNumber #>";
        public const string ArrheniusCorfficients = @"<#= arrheniusAbc #>";
        public const string SpeciesId = @"<#= speciesId #>";
        public const string ElementId = @"<#= elementId #>";
    }
}
<#+ 
    readonly Regex RegexWhiteSpace = new Regex(@"\s+|(?=\#)(?<!\\)\#[^\r\n]*\s*");
    public string Minify(string pattern)
    {
        return RegexWhiteSpace.Replace(pattern, string.Empty);
    }
 #>